server:
  port: ${reggie.server.port}
spring:
  profiles:
    active: dev
  application:
    #应用的名称，可选
    name: reggie
  # 数据源配置
  datasource:
    druid:
      driver-class-name: ${reggie.mysql.driver-class-name}
      url: ${reggie.mysql.url}
      username: ${reggie.mysql.username}
      password: ${reggie.mysql.password}
  #  Redis配置
  redis:
    database: ${reggie.redis.database}
    host: ${reggie.redis.host}
    port: ${reggie.redis.port}
    password: ${reggie.redis.password}
#  shardingsphere:
#    datasource:
#      names: master,slave
#
#      master:
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://192.168.127.131:3306/reggie?useSSL=false&serverTimezone=UTC
#        username: yuxia
#        password: 123456
#
#      slave:
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://192.168.127.132:3306/reggie?useSSL=false&serverTimezone=UTC
#        username: yuxia
#        password: 123456
#    rules:
#      readwrite-splitting:
#        data-sources:
#          read-write-datasource:
#            static-strategy:
#              # 写库数据源名称
#              write-data-source-name: master
#              # 读库数据源列表，多个从数据源用逗号分隔
#              read-data-source-names: slave
#            # 负载均衡算法名称
#            load-balancer-name: round_robin
#        # 负载均衡算法配置
#        load-balancers:
#          round_robin:
#            # 负载均衡算法类型
#            type: ROUND_ROBIN
#    props:
#      sql-show: true
#  main:
#    allow-bean-definition-overriding: true

# MyBatis Plus配置
mybatis-plus:
  configuration:
    #在映射实体或者属性时，将数据库中表名和字段名中的下划线去掉，按照驼峰命名法映射
    map-underscore-to-camel-case: true
    # SQL语句等日志信息输出在控制台
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      # 使用雪花算法自动生成主键ID
      id-type: ASSIGN_ID
  mapper-locations: classpath*:/mapper/**/*.xml
  type-aliases-package: com.itheima.reggie.entity
# 常量配置，存放图片的目录
reggie:
#  path: D:\img\
#  jwt:
#    # 设置jwt签名加密时使用的秘钥
#    admin-secret-key: admin
#    # 设置jwt签名的过期时间'
#    admin-ttl: 7200000
#    # 设置前端传递过来的令牌名称
#    admin-token-name: token
#
#    user-secret-key: user
#    user-ttl: 7200000
#    user-token-name: authentication
  alioss:
    endpoint: ${reggie.alioss.endpoint}
    access-key-id: ${reggie.alioss.access-key-id}
    access-key-secret: ${reggie.alioss.access-key-secret}
    bucket-name: ${reggie.alioss.bucket-name}

